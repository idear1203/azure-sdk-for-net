// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// WorkspaceManagedSqlServerKeysOperations operations.
    /// </summary>
    public partial interface IWorkspaceManagedSqlServerKeysOperations
    {
        /// <summary>
        /// Create or updates server's server key.
        /// </summary>
        /// <remarks>
        /// Create or updates workspace managed sql server's server key.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace
        /// </param>
        /// <param name='serverKeyName'>
        /// The name of the server key to be operated on (updated or created).
        /// The key name is required to be in the format of
        /// 'vault_key_version'. For example, if the keyId is
        /// https://YourVaultName.vault.azure.net/keys/YourKeyName/01234567890123456789012345678901,
        /// then the server key name should be formatted as:
        /// YourVaultName_YourKeyName_01234567890123456789012345678901
        /// </param>
        /// <param name='parameters'>
        /// The requested server key resource state.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ServerKey>> CreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string serverKeyName, ServerKey parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes workspace server's server key with the given name.
        /// </summary>
        /// <remarks>
        /// Deletes workspace managed sql server's server key with the given
        /// name.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace
        /// </param>
        /// <param name='serverKeyName'>
        /// The name of the server key to be operated on (updated or created).
        /// The key name is required to be in the format of
        /// 'vault_key_version'. For example, if the keyId is
        /// https://YourVaultName.vault.azure.net/keys/YourKeyName/01234567890123456789012345678901,
        /// then the server key name should be formatted as:
        /// YourVaultName_YourKeyName_01234567890123456789012345678901
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string serverKeyName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create or updates server's server key.
        /// </summary>
        /// <remarks>
        /// Create or updates workspace managed sql server's server key.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace
        /// </param>
        /// <param name='serverKeyName'>
        /// The name of the server key to be operated on (updated or created).
        /// The key name is required to be in the format of
        /// 'vault_key_version'. For example, if the keyId is
        /// https://YourVaultName.vault.azure.net/keys/YourKeyName/01234567890123456789012345678901,
        /// then the server key name should be formatted as:
        /// YourVaultName_YourKeyName_01234567890123456789012345678901
        /// </param>
        /// <param name='parameters'>
        /// The requested server key resource state.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ServerKey>> BeginCreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string serverKeyName, ServerKey parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes workspace server's server key with the given name.
        /// </summary>
        /// <remarks>
        /// Deletes workspace managed sql server's server key with the given
        /// name.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace
        /// </param>
        /// <param name='serverKeyName'>
        /// The name of the server key to be operated on (updated or created).
        /// The key name is required to be in the format of
        /// 'vault_key_version'. For example, if the keyId is
        /// https://YourVaultName.vault.azure.net/keys/YourKeyName/01234567890123456789012345678901,
        /// then the server key name should be formatted as:
        /// YourVaultName_YourKeyName_01234567890123456789012345678901
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string serverKeyName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
